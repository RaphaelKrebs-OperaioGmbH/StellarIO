@model BuildViewModel

@{
    ViewData["Title"] = "Build a new building";
}

<h1>Build a new building</h1>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        @Html.ValidationSummary(false, "A wild Ashi appears. Gotcha!")
    </div>
}

<div class="row">
    @foreach (var building in Model.AvailableBuildings)
    {
        <div class="col-md-4">
            <div class="card mb-3">
                <div class="card-body">
                    <h5 class="card-title">@building.Name</h5>
                    <p class="card-text"><strong>Duration:</strong> @building.Duration seconds</p>
                    <p class="card-text"><strong>Completion Time:</strong> @DateTime.UtcNow.AddSeconds(@building.Duration).ToLocalTime()</p>
                    <p class="card-text"><strong>Iron Cost:</strong> @building.IronCost</p>
                    <p class="card-text"><strong>Silver Cost:</strong> @building.SilverCost</p>
                    <p class="card-text"><strong>Aluminium Cost:</strong> @building.AluminiumCost</p>
                    <p class="card-text"><strong>H2 Cost:</strong> @building.H2Cost</p>
                    <p class="card-text"><strong>Energy Cost:</strong> @building.EnergyCost</p>
                    <form asp-action="Build" method="post">
                        <input type="hidden" asp-for="PlanetId" />
                        <input type="hidden" name="SelectedBuilding" value="@building.Name" />
                        <button type="submit" class="btn btn-primary">Build</button>
                    </form>
                </div>
            </div>
        </div>
    }
</div>
